name: Production Deployment

on:
  push:
    branches:
      - main

env:
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
  ALLOWED_ORIGINS: https://frameruniversity.com,*.frameruniversity.com,*.frameruniversity.workers.dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Cache Rust build artifacts
        uses: actions/cache@v3
        with:
          path: |
            apps/api/target/release
            apps/api/target/debug
          key: ${{ runner.os }}-rust-${{ hashFiles('apps/api/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      - name: Build and test
        run: pnpm turbo run build lint format:check check-types test e2e

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Deploy API to Fly.io
        run: |
          cd apps/api
          flyctl deploy --config fly.toml

      - name: Deploy Web App to Cloudflare
        run: |
          cd apps/web
          pnpm run deploy

      - name: Deploy Admin App to Cloudflare
        run: |
          cd apps/admin
          pnpm run deploy

      - name: Deploy Plugin to Cloudflare
        run: |
          cd apps/plugin
          pnpm run deploy

      - name: Deploy Storybook to Chromatic
        run: |
          cd apps/storybook
          pnpm chromatic --project-token=${{ secrets.CHROMATIC_PROJECT_TOKEN }} 